trigger: none
pr:
  branches:
    include:
    - feature/*
  paths:
    include:
    - deploy/terraform/bootstrap/sap_library
    - deploy/terraform/run/sap_library
    - deploy/terraform/terraform-units/modules/sap_library
variables:
  - group: azure-config-variables
  - group: azure-sap-hana-pipeline-secrets
  - template: templates/variables.yaml
stages:
- stage:
  pool:
    vmImage: "ubuntu-18.04"
  variables:
    ssh_timeout_s: 120
  jobs:
  - job: testLib
    steps:
      - script: |
          mkdir -p ~/.ssh
          echo -e "$(hana-pipeline-rsa)" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

          echo "=== Set agent IP ==="
          echo '##vso[task.setvariable variable=agent_ip]$(curl -s https://ipinfo.io/json | jq -r .ip)'

          echo "=== Fetch deployer info ==="
          az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
          
          echo "##vso[task.setvariable variable=username]$(az vm list --resource-group ad-sap-deployer | jq -r .[].osProfile.adminUsername)"
          vm_name=$(az vm list --resource-group ad-sap-deployer | jq -r .[].name)
          pip=$(az vm list-ip-addresses -g ad-sap-deployer -n $vm_name | jq -r .[].virtualMachine.network.publicIpAddresses | jq -r .[].ipAddress)
          echo "##vso[task.setvariable variable=publicIP]$pip"
        displayName: "Pre deployment"
        env:
          ARM_CLIENT_ID: $(hana-pipeline-spn-id)
          ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
          ARM_TENANT_ID: $(landscape-tenant)
          ARM_SUBSCRIPTION_ID: $(landscape-subscription)
      - script: |
          az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
          
          echo "=== Update NSG source address with agent IP ==="
          prefix_list=$(az network nsg rule show  -g ad-sap-deployer --nsg-name nsg-mgmt -n ssh | jq -r '.sourceAddressPrefix, (.sourceAddressPrefixes | join(" ")) | select(.!=null)')
          az network nsg rule update -g ad-sap-deployer --nsg-name nsg-mgmt -n ssh --source-address-prefixes $(agent_ip) $prefix_list --output none
          
          echo "=== Deploy SAP library from deployer ==="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
          source /etc/profile.d/deploy_server.sh
          cd ~/sap-hana
          git checkout $(sourceBranchName)
          cd ~/sap-hana/deploy/terraform/bootstrap
          cp -r sap_library sap_library_$(Build.BuildId)
          cd sap_library_$(Build.BuildId)
          sed -i 's/saplibrary/saplibrary.$(Build.BuildId)/' backend.tf
          sed -i 's/sap-library-test/ad-sap-library-$(Build.BuildId)/' saplibrary.json
          az login --identity --output none
          terraform -version
          terraform init
          terraform apply -auto-approve -var-file=saplibrary.json
          '
        displayName: "Deploy new saplibrary"
        env:
          ARM_CLIENT_ID: $(hana-pipeline-spn-id)
          ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
          ARM_TENANT_ID: $(landscape-tenant)
          ARM_SUBSCRIPTION_ID: $(landscape-subscription)
      - script: |
          echo "=== Destroy SAP library from deployer ==="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
          source /etc/profile.d/deploy_server.sh
          saplib_rg="ad-sap-library-$(Build.BuildId)"
          az login --identity --output none
          az group update --resource-group $saplib_rg --set tags.Delete=True --output none
          az lock delete --name resource-group-level --resource-group $saplib_rg --output none
          cd sap-hana/deploy/terraform/bootstrap/sap_library_$(Build.BuildId)
          terraform destroy -auto-approve -var-file=saplibrary.json
          '

          exit 0
        displayName: "Destroy new saplibrary"
      - script: |
          echo "=== Cleanup resources on deployer ==="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o ConnectTimeout=$(ssh_timeout_s) "$(username)"@"$(publicIP)" '
          rm -rf ~/sap-hana/deploy/terraform/bootstrap/sap_library_$(Build.BuildId)
          '

          echo "=== Mark and try to delete rg  ==="
          az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
          
          rg="ad-sap-library-$(Build.BuildId)"
          az group update --resource-group $rg --set tags.Delete=True
          az group delete -n $rg --no-wait -y

          echo "=== Update NSG source address by removing agent IP ==="
          prefix_list=$(az network nsg rule show  -g ad-sap-deployer --nsg-name nsg-mgmt -n ssh | jq -r '.sourceAddressPrefix, (.sourceAddressPrefixes | join(" ")) | select(.!=null)' | sed "s/$(agent_ip)//")
          az network nsg rule update -g ad-sap-deployer --nsg-name nsg-mgmt -n ssh --source-address-prefixes $prefix_list --output none
        displayName: "Cleanup"
        condition: always()
        env:
          ARM_CLIENT_ID: $(hana-pipeline-spn-id)
          ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
          ARM_TENANT_ID: $(landscape-tenant)
          ARM_SUBSCRIPTION_ID: $(landscape-subscription)
